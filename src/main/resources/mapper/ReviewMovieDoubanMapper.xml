<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.humingk.movie.mapper.ReviewMovieDoubanMapper">
  <resultMap id="BaseResultMap" type="org.humingk.movie.entity.ReviewMovieDouban">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="agree_vote" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="against_vote" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_datetime" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.humingk.movie.entity.ReviewMovieDouban">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="agree_vote" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="against_vote" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_datetime" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, agree_vote, against_vote, create_datetime, title
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.humingk.movie.entity.ReviewMovieDoubanExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review_movie_douban
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.humingk.movie.entity.ReviewMovieDoubanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review_movie_douban
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review_movie_douban
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from review_movie_douban
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.humingk.movie.entity.ReviewMovieDoubanExample">
    delete from review_movie_douban
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.humingk.movie.entity.ReviewMovieDouban">
    insert into review_movie_douban (id, agree_vote, against_vote, 
      create_datetime, title, content
      )
    values (#{id,jdbcType=BIGINT}, #{agreeVote,jdbcType=INTEGER}, #{againstVote,jdbcType=INTEGER}, 
      #{createDatetime,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.humingk.movie.entity.ReviewMovieDouban">
    insert into review_movie_douban
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agreeVote != null">
        agree_vote,
      </if>
      <if test="againstVote != null">
        against_vote,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="agreeVote != null">
        #{agreeVote,jdbcType=INTEGER},
      </if>
      <if test="againstVote != null">
        #{againstVote,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.humingk.movie.entity.ReviewMovieDoubanExample" resultType="java.lang.Long">
    select count(*) from review_movie_douban
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review_movie_douban
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.agreeVote != null">
        agree_vote = #{record.agreeVote,jdbcType=INTEGER},
      </if>
      <if test="record.againstVote != null">
        against_vote = #{record.againstVote,jdbcType=INTEGER},
      </if>
      <if test="record.createDatetime != null">
        create_datetime = #{record.createDatetime,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update review_movie_douban
    set id = #{record.id,jdbcType=BIGINT},
      agree_vote = #{record.agreeVote,jdbcType=INTEGER},
      against_vote = #{record.againstVote,jdbcType=INTEGER},
      create_datetime = #{record.createDatetime,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review_movie_douban
    set id = #{record.id,jdbcType=BIGINT},
      agree_vote = #{record.agreeVote,jdbcType=INTEGER},
      against_vote = #{record.againstVote,jdbcType=INTEGER},
      create_datetime = #{record.createDatetime,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.humingk.movie.entity.ReviewMovieDouban">
    update review_movie_douban
    <set>
      <if test="agreeVote != null">
        agree_vote = #{agreeVote,jdbcType=INTEGER},
      </if>
      <if test="againstVote != null">
        against_vote = #{againstVote,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.humingk.movie.entity.ReviewMovieDouban">
    update review_movie_douban
    set agree_vote = #{agreeVote,jdbcType=INTEGER},
      against_vote = #{againstVote,jdbcType=INTEGER},
      create_datetime = #{createDatetime,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.humingk.movie.entity.ReviewMovieDouban">
    update review_movie_douban
    set agree_vote = #{agreeVote,jdbcType=INTEGER},
      against_vote = #{againstVote,jdbcType=INTEGER},
      create_datetime = #{createDatetime,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>