<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.humingk.movie.mapper.MovieMapper">
    <resultMap id="BaseResultMap" type="org.humingk.movie.entity.Movie">
        <id column="movie_id" jdbcType="INTEGER" property="movieId"/>
        <result column="name" jdbcType="CHAR" property="name"/>
        <result column="rate" jdbcType="REAL" property="rate"/>
        <result column="imdb_id" jdbcType="CHAR" property="imdbId"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
    </resultMap>

    <!--根据movieAll更新movie-->
    <insert id="updateMovieBaseByMovieAll">
    Insert  ignore
    into movie(movie_id,name,rate,imdb_id,alias)
    values (#{movieId,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{rate,jdbcType=REAL},
      #{imdbId,jdbcType=CHAR}, #{alias,jdbcType=VARCHAR})
  </insert>


    <!--更新电影豆瓣评分-->
    <update id="updateRateByPrimaryKey">
    update movie
    set movie.rate = #{rate,jdbcType=REAL}
    where movie.movie_id = #{movieId,jdbcType=INTEGER}
  </update>

  <!--更新电影imdbId-->
  <update id="updateImdbIdByPrimaryKey">
    update movie
    set movie.imdb_id = #{imdbId,jdbcType=CHAR}
    where movie.movie_id = #{movieId,jdbcType=INTEGER}
  </update>

    <!--根据电影名返回电影集合-->
    <select id="selectMoviesByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select movie.*
    from movie
    where movie.name=#{name,jdbcType=CHAR}
  </select>

    <!--根据电影名或者部分电影名或者别称返回电影集合-->

    <select id="selectMoviesByAlias" resultMap="BaseResultMap">
    select movie.*
    from movie
    where movie.name like CONCAT('%',#{name,jdbcType=CHAR},'%') or movie.alias like CONCAT('',#{name,jdbcType=CHAR},'%')
     order by  length(movie.alias) desc
    limit #{start,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
</select>

    <!--根据以 电影名 开头的字符串返回电影集合-->

    <select id="selectMoviesByNameStart" parameterType="java.lang.String" resultMap="BaseResultMap">
      select movie.*
    from movie
    where movie.name like CONCAT('',#{name,jdbcType=CHAR},'%')
     order by  length(movie.alias) desc
     limit 8
  </select>

    <!--根据电影id返回电影的详细资料-->

    <!--基本资料-->
    <select id="selectMovieBaseById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select movie.*
  from movie
  where movie.movie_id=#{movieId,jdbcType=INTEGER}
  </select>


    <!--根据演员的ID返回所有的电影-->

    <!--根据导演id-->
    <select id="selectMoviesByDirectorId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select movie.*
    from movie
    inner join movie_director
    on movie.movie_id = movie_director.movie_id
    where movie_director.director_id=#{actorId,jdbcType=INTEGER}
  </select>

    <!--根据编剧id-->
    <select id="selectMoviesByWriterId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select movie.*
    from movie
    inner join movie_writer
    on movie.movie_id = movie_writer.movie_id
    where movie_writer.writer_id=#{actorId,jdbcType=INTEGER}
  </select>

    <!--根据主演id-->
    <select id="selectMoviesByLeadingactorId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select movie.*
    from movie
    inner join movie_leadingactor
    on movie.movie_id = movie_leadingactor.movie_id
    where movie_leadingactor.leadingactor_id=#{actorId,jdbcType=INTEGER}
  </select>

</mapper>
