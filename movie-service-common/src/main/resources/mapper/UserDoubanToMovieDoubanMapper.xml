<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.humingk.movie.service.common.mapper.UserDoubanToMovieDoubanMapper">
  <resultMap id="BaseResultMap" type="org.humingk.movie.service.common.entity.UserDoubanToMovieDouban">
    <constructor>
      <idArg column="id_user_douban" javaType="java.lang.String" jdbcType="VARCHAR" />
      <idArg column="id_movie_douban" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="score" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="is_wish" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="is_seen" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id_user_douban, id_movie_douban, score, is_wish, is_seen
  </sql>
  <select id="selectByExample" parameterType="org.humingk.movie.service.common.entity.UserDoubanToMovieDoubanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_douban_to_movie_douban
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_douban_to_movie_douban
    where id_user_douban = #{idUserDouban,jdbcType=VARCHAR}
      and id_movie_douban = #{idMovieDouban,jdbcType=BIGINT}
      and score = #{score,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from user_douban_to_movie_douban
    where id_user_douban = #{idUserDouban,jdbcType=VARCHAR}
      and id_movie_douban = #{idMovieDouban,jdbcType=BIGINT}
      and score = #{score,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="org.humingk.movie.service.common.entity.UserDoubanToMovieDoubanExample">
    delete from user_douban_to_movie_douban
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.humingk.movie.service.common.entity.UserDoubanToMovieDouban">
    insert into user_douban_to_movie_douban (id_user_douban, id_movie_douban, score, 
      is_wish, is_seen)
    values (#{idUserDouban,jdbcType=VARCHAR}, #{idMovieDouban,jdbcType=BIGINT}, #{score,jdbcType=DECIMAL}, 
      #{isWish,jdbcType=BIT}, #{isSeen,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.humingk.movie.service.common.entity.UserDoubanToMovieDouban">
    insert into user_douban_to_movie_douban
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idUserDouban != null">
        id_user_douban,
      </if>
      <if test="idMovieDouban != null">
        id_movie_douban,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="isWish != null">
        is_wish,
      </if>
      <if test="isSeen != null">
        is_seen,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idUserDouban != null">
        #{idUserDouban,jdbcType=VARCHAR},
      </if>
      <if test="idMovieDouban != null">
        #{idMovieDouban,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="isWish != null">
        #{isWish,jdbcType=BIT},
      </if>
      <if test="isSeen != null">
        #{isSeen,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.humingk.movie.service.common.entity.UserDoubanToMovieDoubanExample" resultType="java.lang.Long">
    select count(*) from user_douban_to_movie_douban
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_douban_to_movie_douban
    <set>
      <if test="record.idUserDouban != null">
        id_user_douban = #{record.idUserDouban,jdbcType=VARCHAR},
      </if>
      <if test="record.idMovieDouban != null">
        id_movie_douban = #{record.idMovieDouban,jdbcType=BIGINT},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.isWish != null">
        is_wish = #{record.isWish,jdbcType=BIT},
      </if>
      <if test="record.isSeen != null">
        is_seen = #{record.isSeen,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_douban_to_movie_douban
    set id_user_douban = #{record.idUserDouban,jdbcType=VARCHAR},
      id_movie_douban = #{record.idMovieDouban,jdbcType=BIGINT},
      score = #{record.score,jdbcType=DECIMAL},
      is_wish = #{record.isWish,jdbcType=BIT},
      is_seen = #{record.isSeen,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.humingk.movie.service.common.entity.UserDoubanToMovieDouban">
    update user_douban_to_movie_douban
    <set>
      <if test="isWish != null">
        is_wish = #{isWish,jdbcType=BIT},
      </if>
      <if test="isSeen != null">
        is_seen = #{isSeen,jdbcType=BIT},
      </if>
    </set>
    where id_user_douban = #{idUserDouban,jdbcType=VARCHAR}
      and id_movie_douban = #{idMovieDouban,jdbcType=BIGINT}
      and score = #{score,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.humingk.movie.service.common.entity.UserDoubanToMovieDouban">
    update user_douban_to_movie_douban
    set is_wish = #{isWish,jdbcType=BIT},
      is_seen = #{isSeen,jdbcType=BIT}
    where id_user_douban = #{idUserDouban,jdbcType=VARCHAR}
      and id_movie_douban = #{idMovieDouban,jdbcType=BIGINT}
      and score = #{score,jdbcType=DECIMAL}
  </update>
</mapper>