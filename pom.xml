<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--阿里源-->
    <repositories>
        <repository>
            <id>alimaven</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <!--父依赖-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>
    <!--项目详情-->
    <groupId>org.humingk</groupId>
    <artifactId>movie</artifactId>
    <version>2.1</version>
    <!--父依赖的打包类型为pom(其他默认为jar)-->
    <!--jar:    内部调用,服务-->
    <!--war:    需要部署的项目-->
    <packaging>pom</packaging>
    <name>movie</name>
    <description>douban movie plus</description>
    <!--开发者-->
    <developers>
        <developer>
            <name>humingk</name>
            <email>humingk@gmail.com</email>
            <url>https://github.com/humingk</url>
        </developer>
    </developers>
    <!--子模块-->
    <modules>
        <module>movie-server-eureka</module>
        <module>movie-service-common</module>
        <module>movie-service-user</module>
        <module>movie-service-zuul</module>
        <module>movie-config-server</module>
        <module>movie-config-client</module>
    </modules>
    <!--版本集合 -->
    <properties>
        <java.version>1.8</java.version>
        <!--spring boot starter -->
        <spring-boot-starter-web.version>2.0.3.RELEASE</spring-boot-starter-web.version>
        <spring-boot-starter-aop.version>2.0.3.RELEASE</spring-boot-starter-aop.version>
        <spring-boot-starter-security.version>2.0.3.RELEASE</spring-boot-starter-security.version>
        <spring-boot-starter-test.version>2.0.3.RELEASE</spring-boot-starter-test.version>
        <spring-boot-starter-data-redis.version>2.0.3.RELEASE</spring-boot-starter-data-redis.version>
        <mybatis-spring-boot-starter.version>2.0.3</mybatis-spring-boot-starter.version>
        <pagehelper-spring-boot-starter.version>1.2.13</pagehelper-spring-boot-starter.version>
        <spring-boot-starter-actuator.version>2.0.3.RELEASE</spring-boot-starter-actuator.version>

        <!--spring cloud starter -->
        <spring-cloud-dependencies.version>Finchley.RELEASE</spring-cloud-dependencies.version>
        <spring-cloud-starter-netflix-eureka-client.version>2.2.1.RELEASE
        </spring-cloud-starter-netflix-eureka-client.version>
        <spring-cloud-starter-netflix-eureka-server.version>2.2.1.RELEASE
        </spring-cloud-starter-netflix-eureka-server.version>
        <spring-cloud-starter-netflix-zuul.version>2.2.1.RELEASE</spring-cloud-starter-netflix-zuul.version>
        <spring-cloud-config-server.version>2.2.1.RELEASE</spring-cloud-config-server.version>
        <spring-cloud-starter-config.version>2.2.1.RELEASE</spring-cloud-starter-config.version>
        <spring-cloud-starter-bus-amqp.version>2.2.0.RELEASE</spring-cloud-starter-bus-amqp.version>

        <!--tools-->
        <mybatis-generator-maven-plugin.version>1.3.7</mybatis-generator-maven-plugin.version>
        <mysql-connector-java.version>8.0.18</mysql-connector-java.version>
        <lombok.version>1.18.10</lombok.version>
        <fastjson.version>1.2.62</fastjson.version>
        <jjwt.version>0.9.1</jjwt.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-pool2.version>2.7.0</commons-pool2.version>
        <guava.version>28.1-jre</guava.version>

    </properties>
    <!--依赖(子模块会继承)-->
    <dependencies>
        <!--web-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot-starter-web.version}</version>
        </dependency>
        <!--测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <version>${spring-boot-starter-test.version}</version>
        </dependency>
        <!--eureka client-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <version>${spring-cloud-starter-netflix-eureka-client.version}</version>
        </dependency>
    </dependencies>

    <!--依赖管理(子模块需要显式继承)-->
    <dependencyManagement>
        <dependencies>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!--mysql 驱动-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <scope>runtime</scope>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!--spring security-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot-starter-security.version}</version>
            </dependency>
            <!--jjwt-->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!--mybatis generator page helper 分页插件-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>
            <!--aop -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot-starter-aop.version}</version>
            </dependency>
            <!--lombok工具-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--lang3-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!--redis-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot-starter-data-redis.version}</version>
            </dependency>
            <!--pool2-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <!--google  guava-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!--spring cloud dependencies-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--eureka server-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${spring-cloud-starter-netflix-eureka-server.version}</version>
            </dependency>
            <!--zuul-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
                <version>${spring-cloud-starter-netflix-zuul.version}</version>
            </dependency>
            <!--spring cloud config server-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${spring-cloud-config-server.version}</version>
            </dependency>
            <!--spring cloud config client-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring-cloud-starter-config.version}</version>
            </dependency>
            <!--spring cloud bus amqp-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bus-amqp</artifactId>
                <version>${spring-cloud-starter-bus-amqp.version}</version>
            </dependency>
            <!--actuator-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot-starter-actuator.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!--插件-->
        <plugins>
            <!--maven-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--mybatis generator-->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>${mybatis-generator-maven-plugin.version}</version>
                <configuration>
                    <!--mybatis的代码生成器的配置文件-->
                    <configurationFile>src/main/resources/mybatis/generatorConfig.xml</configurationFile>
                    <!--允许覆盖生成的文件-->
                    <overwrite>true</overwrite>
                    <!--将当前pom的依赖项添加到生成器的类路径中-->
                    <!--<includeCompileDependencies>true</includeCompileDependencies>-->
                </configuration>
                <dependencies>
                    <!--mysql的JDBC驱动 -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector-java.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>